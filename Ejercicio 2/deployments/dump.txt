{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes-p2-control-plane",
                "uid": "098404d3-0792-47ef-9811-1fdaa9e44b18",
                "resourceVersion": "314",
                "creationTimestamp": "2023-06-20T00:02:59Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "kubernetes-p2-control-plane",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": "",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.0.0.0/24",
                "podCIDRs": [
                    "10.0.0.0/24"
                ],
                "providerID": "kind://docker/kubernetes-p2/kubernetes-p2-control-plane",
                "taints": [
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "16",
                    "ephemeral-storage": "243673252Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32753428Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "16",
                    "ephemeral-storage": "243673252Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32753428Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:02Z",
                        "lastTransitionTime": "2023-06-20T00:02:59Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:02Z",
                        "lastTransitionTime": "2023-06-20T00:02:59Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:02Z",
                        "lastTransitionTime": "2023-06-20T00:02:59Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:02Z",
                        "lastTransitionTime": "2023-06-20T00:02:59Z",
                        "reason": "KubeletNotReady",
                        "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.19.0.2"
                    },
                    {
                        "type": "Hostname",
                        "address": "kubernetes-p2-control-plane"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "abc1fcca5f8549b786dacff931edf4e5",
                    "systemUUID": "29f3a7ec-5326-4aa8-b608-4157ef56b3c4",
                    "bootID": "d647234e-cafe-4542-bdbc-ab81ef22df44",
                    "kernelVersion": "6.3.7-1-default",
                    "osImage": "Debian GNU/Linux 11 (bullseye)",
                    "containerRuntimeVersion": "containerd://1.7.1",
                    "kubeletVersion": "v1.27.3",
                    "kubeProxyVersion": "v1.27.3",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.7-0"
                        ],
                        "sizeBytes": 101639218
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762",
                            "registry.k8s.io/kube-apiserver:v1.27.3"
                        ],
                        "sizeBytes": 83456511
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7",
                            "registry.k8s.io/kube-controller-manager:v1.27.3"
                        ],
                        "sizeBytes": 74420365
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                            "registry.k8s.io/kube-proxy:v1.27.3"
                        ],
                        "sizeBytes": 72711677
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2",
                            "registry.k8s.io/kube-scheduler:v1.27.3"
                        ],
                        "sizeBytes": 59801741
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20230511-dc714da8"
                        ],
                        "sizeBytes": 27731571
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20230511-dc714da8"
                        ],
                        "sizeBytes": 19351145
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.10.1"
                        ],
                        "sizeBytes": 16190758
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20230510-486859a6"
                        ],
                        "sizeBytes": 3052318
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 311278
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker",
                "uid": "c73c9bc8-701a-4a44-bf74-20e13fd0a253",
                "resourceVersion": "484",
                "creationTimestamp": "2023-06-20T00:03:22Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "kubernetes-p2-worker",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.0.2.0/24",
                "podCIDRs": [
                    "10.0.2.0/24"
                ],
                "providerID": "kind://docker/kubernetes-p2/kubernetes-p2-worker",
                "taints": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "16",
                    "ephemeral-storage": "243673252Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32753428Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "16",
                    "ephemeral-storage": "243673252Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32753428Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:32Z",
                        "lastTransitionTime": "2023-06-20T00:03:22Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:32Z",
                        "lastTransitionTime": "2023-06-20T00:03:22Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:32Z",
                        "lastTransitionTime": "2023-06-20T00:03:22Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:32Z",
                        "lastTransitionTime": "2023-06-20T00:03:22Z",
                        "reason": "KubeletNotReady",
                        "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.19.0.3"
                    },
                    {
                        "type": "Hostname",
                        "address": "kubernetes-p2-worker"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "62d85717968c41a3a0cf337bf45608ff",
                    "systemUUID": "0a22f7cd-7e27-4114-aea7-973d75111045",
                    "bootID": "d647234e-cafe-4542-bdbc-ab81ef22df44",
                    "kernelVersion": "6.3.7-1-default",
                    "osImage": "Debian GNU/Linux 11 (bullseye)",
                    "containerRuntimeVersion": "containerd://1.7.1",
                    "kubeletVersion": "v1.27.3",
                    "kubeProxyVersion": "v1.27.3",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.7-0"
                        ],
                        "sizeBytes": 101639218
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762",
                            "registry.k8s.io/kube-apiserver:v1.27.3"
                        ],
                        "sizeBytes": 83456511
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7",
                            "registry.k8s.io/kube-controller-manager:v1.27.3"
                        ],
                        "sizeBytes": 74420365
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                            "registry.k8s.io/kube-proxy:v1.27.3"
                        ],
                        "sizeBytes": 72711677
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2",
                            "registry.k8s.io/kube-scheduler:v1.27.3"
                        ],
                        "sizeBytes": 59801741
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20230511-dc714da8"
                        ],
                        "sizeBytes": 27731571
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20230511-dc714da8"
                        ],
                        "sizeBytes": 19351145
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.10.1"
                        ],
                        "sizeBytes": 16190758
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20230510-486859a6"
                        ],
                        "sizeBytes": 3052318
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 311278
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker2",
                "uid": "4c4ee18b-64d7-4747-b32d-8fc602a2186b",
                "resourceVersion": "489",
                "creationTimestamp": "2023-06-20T00:03:23Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "kubernetes-p2-worker2",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.0.3.0/24",
                "podCIDRs": [
                    "10.0.3.0/24"
                ],
                "providerID": "kind://docker/kubernetes-p2/kubernetes-p2-worker2",
                "taints": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "16",
                    "ephemeral-storage": "243673252Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32753428Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "16",
                    "ephemeral-storage": "243673252Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32753428Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:33Z",
                        "lastTransitionTime": "2023-06-20T00:03:23Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:33Z",
                        "lastTransitionTime": "2023-06-20T00:03:23Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:33Z",
                        "lastTransitionTime": "2023-06-20T00:03:23Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:33Z",
                        "lastTransitionTime": "2023-06-20T00:03:23Z",
                        "reason": "KubeletNotReady",
                        "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.19.0.5"
                    },
                    {
                        "type": "Hostname",
                        "address": "kubernetes-p2-worker2"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "e99654208c374ca5a3578b560405c795",
                    "systemUUID": "6600216a-1ecc-40a4-a8c9-da7f5d245351",
                    "bootID": "d647234e-cafe-4542-bdbc-ab81ef22df44",
                    "kernelVersion": "6.3.7-1-default",
                    "osImage": "Debian GNU/Linux 11 (bullseye)",
                    "containerRuntimeVersion": "containerd://1.7.1",
                    "kubeletVersion": "v1.27.3",
                    "kubeProxyVersion": "v1.27.3",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.7-0"
                        ],
                        "sizeBytes": 101639218
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762",
                            "registry.k8s.io/kube-apiserver:v1.27.3"
                        ],
                        "sizeBytes": 83456511
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7",
                            "registry.k8s.io/kube-controller-manager:v1.27.3"
                        ],
                        "sizeBytes": 74420365
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                            "registry.k8s.io/kube-proxy:v1.27.3"
                        ],
                        "sizeBytes": 72711677
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2",
                            "registry.k8s.io/kube-scheduler:v1.27.3"
                        ],
                        "sizeBytes": 59801741
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20230511-dc714da8"
                        ],
                        "sizeBytes": 27731571
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20230511-dc714da8"
                        ],
                        "sizeBytes": 19351145
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.10.1"
                        ],
                        "sizeBytes": 16190758
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20230510-486859a6"
                        ],
                        "sizeBytes": 3052318
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 311278
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker3",
                "uid": "4fed1155-4113-45b2-9c2d-eecc121193db",
                "resourceVersion": "482",
                "creationTimestamp": "2023-06-20T00:03:21Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "kubernetes-p2-worker3",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.0.1.0/24",
                "podCIDRs": [
                    "10.0.1.0/24"
                ],
                "providerID": "kind://docker/kubernetes-p2/kubernetes-p2-worker3",
                "taints": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "16",
                    "ephemeral-storage": "243673252Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32753428Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "16",
                    "ephemeral-storage": "243673252Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32753428Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:32Z",
                        "lastTransitionTime": "2023-06-20T00:03:21Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:32Z",
                        "lastTransitionTime": "2023-06-20T00:03:21Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:32Z",
                        "lastTransitionTime": "2023-06-20T00:03:21Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastHeartbeatTime": "2023-06-20T00:03:32Z",
                        "lastTransitionTime": "2023-06-20T00:03:21Z",
                        "reason": "KubeletNotReady",
                        "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.19.0.4"
                    },
                    {
                        "type": "Hostname",
                        "address": "kubernetes-p2-worker3"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "46f7af6327c84160a326a9f32e575dcc",
                    "systemUUID": "09835189-228e-4635-bdab-95d4832dc9a3",
                    "bootID": "d647234e-cafe-4542-bdbc-ab81ef22df44",
                    "kernelVersion": "6.3.7-1-default",
                    "osImage": "Debian GNU/Linux 11 (bullseye)",
                    "containerRuntimeVersion": "containerd://1.7.1",
                    "kubeletVersion": "v1.27.3",
                    "kubeProxyVersion": "v1.27.3",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.7-0"
                        ],
                        "sizeBytes": 101639218
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762",
                            "registry.k8s.io/kube-apiserver:v1.27.3"
                        ],
                        "sizeBytes": 83456511
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7",
                            "registry.k8s.io/kube-controller-manager:v1.27.3"
                        ],
                        "sizeBytes": 74420365
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                            "registry.k8s.io/kube-proxy:v1.27.3"
                        ],
                        "sizeBytes": 72711677
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2",
                            "registry.k8s.io/kube-scheduler:v1.27.3"
                        ],
                        "sizeBytes": 59801741
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20230511-dc714da8"
                        ],
                        "sizeBytes": 27731571
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20230511-dc714da8"
                        ],
                        "sizeBytes": 19351145
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.10.1"
                        ],
                        "sizeBytes": 16190758
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20230510-486859a6"
                        ],
                        "sizeBytes": 3052318
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 311278
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5d78c9869d-n2s9v.176a351a07d5d402",
                "namespace": "kube-system",
                "uid": "c38959b2-ed4f-4569-9105-850145e9a7b9",
                "resourceVersion": "359",
                "creationTimestamp": "2023-06-20T00:03:16Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-n2s9v",
                "uid": "dd09b2d6-f794-4173-883b-c56ffa67aee4",
                "apiVersion": "v1",
                "resourceVersion": "352"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-20T00:03:16Z",
            "lastTimestamp": "2023-06-20T00:03:16Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-r2gvx.176a351a0748135b",
                "namespace": "kube-system",
                "uid": "a3764494-532f-48a2-85ff-5451cc5de976",
                "resourceVersion": "353",
                "creationTimestamp": "2023-06-20T00:03:16Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-r2gvx",
                "uid": "3ae8b692-a25a-49f2-b282-69b4c9c63c30",
                "apiVersion": "v1",
                "resourceVersion": "349"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-20T00:03:16Z",
            "lastTimestamp": "2023-06-20T00:03:16Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d.176a351a0743a340",
                "namespace": "kube-system",
                "uid": "fb52e559-6ead-460b-8b35-f0fb3d6d976a",
                "resourceVersion": "351",
                "creationTimestamp": "2023-06-20T00:03:16Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d",
                "uid": "ae5f76e7-7779-4eee-bdb7-61389caca83e",
                "apiVersion": "apps/v1",
                "resourceVersion": "341"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-5d78c9869d-r2gvx",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-06-20T00:03:16Z",
            "lastTimestamp": "2023-06-20T00:03:16Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d.176a351a07784a5f",
                "namespace": "kube-system",
                "uid": "ce21bed9-a73b-4020-af0a-3edbeab8272e",
                "resourceVersion": "358",
                "creationTimestamp": "2023-06-20T00:03:16Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d",
                "uid": "ae5f76e7-7779-4eee-bdb7-61389caca83e",
                "apiVersion": "apps/v1",
                "resourceVersion": "341"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-5d78c9869d-n2s9v",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-06-20T00:03:16Z",
            "lastTimestamp": "2023-06-20T00:03:16Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns.176a3519fc3ce267",
                "namespace": "kube-system",
                "uid": "cbef833d-3698-429b-9983-afc82e82d142",
                "resourceVersion": "345",
                "creationTimestamp": "2023-06-20T00:03:16Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns",
                "uid": "7f1a8c50-18ab-4f8a-b57d-91efb485997e",
                "apiVersion": "apps/v1",
                "resourceVersion": "219"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-5d78c9869d to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-06-20T00:03:16Z",
            "lastTimestamp": "2023-06-20T00:03:16Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager.176a3516d0273cd6",
                "namespace": "kube-system",
                "uid": "b200982b-6218-43ab-a77b-cd2c804d299b",
                "resourceVersion": "239",
                "creationTimestamp": "2023-06-20T00:03:02Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-controller-manager",
                "uid": "0704d196-edbf-4d9d-8bb5-fa9365a21103",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "238"
            },
            "reason": "LeaderElection",
            "message": "kubernetes-p2-control-plane_f543fb58-74e1-4e60-8de8-978c2aff2da9 became leader",
            "source": {
                "component": "kube-controller-manager"
            },
            "firstTimestamp": "2023-06-20T00:03:02Z",
            "lastTimestamp": "2023-06-20T00:03:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-65td2.176a351b78bd1234",
                "namespace": "kube-system",
                "uid": "b23f4ddc-b8a3-4237-a299-e98db476a04c",
                "resourceVersion": "424",
                "creationTimestamp": "2023-06-20T00:03:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-65td2",
                "uid": "e3a543c2-a1b3-4afc-bcd6-646394b696ad",
                "apiVersion": "v1",
                "resourceVersion": "418"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-65td2 to kubernetes-p2-worker",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-20T00:03:22Z",
            "lastTimestamp": "2023-06-20T00:03:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-65td2.176a351bc8f7ffdc",
                "namespace": "kube-system",
                "uid": "f2f7e237-1717-40f6-a1af-c38ba1ccbec7",
                "resourceVersion": "452",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-65td2",
                "uid": "e3a543c2-a1b3-4afc-bcd6-646394b696ad",
                "apiVersion": "v1",
                "resourceVersion": "422",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.27.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker"
            },
            "firstTimestamp": "2023-06-20T00:03:23Z",
            "lastTimestamp": "2023-06-20T00:03:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-65td2.176a351bd9011cf8",
                "namespace": "kube-system",
                "uid": "c9bd2f46-7c9f-4ccd-9ca1-6254ad58d4d7",
                "resourceVersion": "456",
                "creationTimestamp": "2023-06-20T00:03:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-65td2",
                "uid": "e3a543c2-a1b3-4afc-bcd6-646394b696ad",
                "apiVersion": "v1",
                "resourceVersion": "422",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker"
            },
            "firstTimestamp": "2023-06-20T00:03:24Z",
            "lastTimestamp": "2023-06-20T00:03:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-65td2.176a351bdf657b22",
                "namespace": "kube-system",
                "uid": "abddb73c-ef8e-4089-ac77-8a0939420eff",
                "resourceVersion": "458",
                "creationTimestamp": "2023-06-20T00:03:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-65td2",
                "uid": "e3a543c2-a1b3-4afc-bcd6-646394b696ad",
                "apiVersion": "v1",
                "resourceVersion": "422",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker"
            },
            "firstTimestamp": "2023-06-20T00:03:24Z",
            "lastTimestamp": "2023-06-20T00:03:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-8kzfm.176a3519f26e9e79",
                "namespace": "kube-system",
                "uid": "e3a41b5b-194e-4518-b300-a7715710f9ab",
                "resourceVersion": "337",
                "creationTimestamp": "2023-06-20T00:03:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-8kzfm",
                "uid": "e8da5aa8-c948-4bf2-b41d-164c508a814f",
                "apiVersion": "v1",
                "resourceVersion": "333"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-8kzfm to kubernetes-p2-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-20T00:03:15Z",
            "lastTimestamp": "2023-06-20T00:03:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-8kzfm.176a351a0fd5a113",
                "namespace": "kube-system",
                "uid": "17e4900d-5e56-4883-86b5-152077f6956d",
                "resourceVersion": "367",
                "creationTimestamp": "2023-06-20T00:03:16Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-8kzfm",
                "uid": "e8da5aa8-c948-4bf2-b41d-164c508a814f",
                "apiVersion": "v1",
                "resourceVersion": "335",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.27.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-control-plane"
            },
            "firstTimestamp": "2023-06-20T00:03:16Z",
            "lastTimestamp": "2023-06-20T00:03:16Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-8kzfm.176a351a1c51a4d9",
                "namespace": "kube-system",
                "uid": "e066ad25-6c18-49f8-9ee8-960b86973a8a",
                "resourceVersion": "369",
                "creationTimestamp": "2023-06-20T00:03:16Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-8kzfm",
                "uid": "e8da5aa8-c948-4bf2-b41d-164c508a814f",
                "apiVersion": "v1",
                "resourceVersion": "335",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-control-plane"
            },
            "firstTimestamp": "2023-06-20T00:03:16Z",
            "lastTimestamp": "2023-06-20T00:03:16Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-8kzfm.176a351a2420cf64",
                "namespace": "kube-system",
                "uid": "b3eec484-d196-468c-8f51-1e9d77dd34e3",
                "resourceVersion": "370",
                "creationTimestamp": "2023-06-20T00:03:16Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-8kzfm",
                "uid": "e8da5aa8-c948-4bf2-b41d-164c508a814f",
                "apiVersion": "v1",
                "resourceVersion": "335",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-control-plane"
            },
            "firstTimestamp": "2023-06-20T00:03:16Z",
            "lastTimestamp": "2023-06-20T00:03:16Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-cd4rl.176a351ba749ae21",
                "namespace": "kube-system",
                "uid": "ee1bfe96-4dae-466f-b2fb-8b50a88cf013",
                "resourceVersion": "444",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-cd4rl",
                "uid": "67d6293e-d809-4482-8e03-c7ae99d25bb2",
                "apiVersion": "v1",
                "resourceVersion": "437"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-cd4rl to kubernetes-p2-worker2",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-20T00:03:23Z",
            "lastTimestamp": "2023-06-20T00:03:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-cd4rl.176a351bfda0bca0",
                "namespace": "kube-system",
                "uid": "fe4e2577-0bd1-467b-bc53-5623b2eae0c5",
                "resourceVersion": "463",
                "creationTimestamp": "2023-06-20T00:03:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-cd4rl",
                "uid": "67d6293e-d809-4482-8e03-c7ae99d25bb2",
                "apiVersion": "v1",
                "resourceVersion": "441",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.27.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker2"
            },
            "firstTimestamp": "2023-06-20T00:03:24Z",
            "lastTimestamp": "2023-06-20T00:03:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-cd4rl.176a351c099d0a5a",
                "namespace": "kube-system",
                "uid": "e3eae70c-8a3f-44bc-87a9-16b03c967111",
                "resourceVersion": "464",
                "creationTimestamp": "2023-06-20T00:03:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-cd4rl",
                "uid": "67d6293e-d809-4482-8e03-c7ae99d25bb2",
                "apiVersion": "v1",
                "resourceVersion": "441",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker2"
            },
            "firstTimestamp": "2023-06-20T00:03:24Z",
            "lastTimestamp": "2023-06-20T00:03:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-cd4rl.176a351c10b1aed6",
                "namespace": "kube-system",
                "uid": "22efd787-cd63-463e-946d-6ced59bf4e92",
                "resourceVersion": "465",
                "creationTimestamp": "2023-06-20T00:03:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-cd4rl",
                "uid": "67d6293e-d809-4482-8e03-c7ae99d25bb2",
                "apiVersion": "v1",
                "resourceVersion": "441",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker2"
            },
            "firstTimestamp": "2023-06-20T00:03:25Z",
            "lastTimestamp": "2023-06-20T00:03:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-vzfdl.176a351b59c9ee20",
                "namespace": "kube-system",
                "uid": "1d0948b1-9855-4484-a788-fe745c747550",
                "resourceVersion": "405",
                "creationTimestamp": "2023-06-20T00:03:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vzfdl",
                "uid": "f5b6faeb-9a13-46af-a6c0-a1933269ea27",
                "apiVersion": "v1",
                "resourceVersion": "398"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-vzfdl to kubernetes-p2-worker3",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-20T00:03:21Z",
            "lastTimestamp": "2023-06-20T00:03:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-vzfdl.176a351bb01e8ab9",
                "namespace": "kube-system",
                "uid": "e46e3b13-04a7-4985-9c98-c721b2212394",
                "resourceVersion": "447",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vzfdl",
                "uid": "f5b6faeb-9a13-46af-a6c0-a1933269ea27",
                "apiVersion": "v1",
                "resourceVersion": "402",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.27.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker3"
            },
            "firstTimestamp": "2023-06-20T00:03:23Z",
            "lastTimestamp": "2023-06-20T00:03:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-vzfdl.176a351bc099c5f6",
                "namespace": "kube-system",
                "uid": "9a45807e-3791-4ae2-a444-563d198b0c2a",
                "resourceVersion": "450",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vzfdl",
                "uid": "f5b6faeb-9a13-46af-a6c0-a1933269ea27",
                "apiVersion": "v1",
                "resourceVersion": "402",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker3"
            },
            "firstTimestamp": "2023-06-20T00:03:23Z",
            "lastTimestamp": "2023-06-20T00:03:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-vzfdl.176a351bc88ba0c3",
                "namespace": "kube-system",
                "uid": "ff6f4659-4b5d-42b9-a7e8-50ef31ec4785",
                "resourceVersion": "451",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vzfdl",
                "uid": "f5b6faeb-9a13-46af-a6c0-a1933269ea27",
                "apiVersion": "v1",
                "resourceVersion": "402",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker3"
            },
            "firstTimestamp": "2023-06-20T00:03:23Z",
            "lastTimestamp": "2023-06-20T00:03:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.176a3519f208a052",
                "namespace": "kube-system",
                "uid": "b5aa0ba5-9470-405b-9185-113d408dd1ee",
                "resourceVersion": "334",
                "creationTimestamp": "2023-06-20T00:03:15Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "eb396b8b-4f8e-4e11-ab54-b2ac59d2b2d6",
                "apiVersion": "apps/v1",
                "resourceVersion": "224"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-8kzfm",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-06-20T00:03:15Z",
            "lastTimestamp": "2023-06-20T00:03:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.176a351b598c77fb",
                "namespace": "kube-system",
                "uid": "34121e47-80f3-416b-8b2e-e69990e7a116",
                "resourceVersion": "400",
                "creationTimestamp": "2023-06-20T00:03:21Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "eb396b8b-4f8e-4e11-ab54-b2ac59d2b2d6",
                "apiVersion": "apps/v1",
                "resourceVersion": "373"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-vzfdl",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-06-20T00:03:21Z",
            "lastTimestamp": "2023-06-20T00:03:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.176a351b787518a0",
                "namespace": "kube-system",
                "uid": "e8bdca63-cef6-4a93-8545-be6825c650a9",
                "resourceVersion": "420",
                "creationTimestamp": "2023-06-20T00:03:22Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "eb396b8b-4f8e-4e11-ab54-b2ac59d2b2d6",
                "apiVersion": "apps/v1",
                "resourceVersion": "403"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-65td2",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-06-20T00:03:22Z",
            "lastTimestamp": "2023-06-20T00:03:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.176a351ba6f5054a",
                "namespace": "kube-system",
                "uid": "590c18ee-b81e-44fc-99b0-36cbe15d5b2f",
                "resourceVersion": "439",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "eb396b8b-4f8e-4e11-ab54-b2ac59d2b2d6",
                "apiVersion": "apps/v1",
                "resourceVersion": "423"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-cd4rl",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-06-20T00:03:23Z",
            "lastTimestamp": "2023-06-20T00:03:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.176a3516fb19ee7b",
                "namespace": "kube-system",
                "uid": "ae6b3d1f-ec83-4a46-9054-d8f721c21749",
                "resourceVersion": "267",
                "creationTimestamp": "2023-06-20T00:03:03Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "9bceb4d0-f5da-4e43-ad35-62fa7fde826e",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "266"
            },
            "reason": "LeaderElection",
            "message": "kubernetes-p2-control-plane_a443022f-4179-4418-aef5-50c254be836d became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-06-20T00:03:03Z",
            "lastTimestamp": "2023-06-20T00:03:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "95bb6f66-fed9-43d3-bf50-6d9c6eccedde",
                "resourceVersion": "221",
                "creationTimestamp": "2023-06-20T00:03:01Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "eb396b8b-4f8e-4e11-ab54-b2ac59d2b2d6",
                "resourceVersion": "468",
                "generation": 1,
                "creationTimestamp": "2023-06-20T00:03:01Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "registry.k8s.io/kube-proxy:v1.27.3",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 4,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 4,
                "numberReady": 4,
                "observedGeneration": 1,
                "updatedNumberScheduled": 4,
                "numberAvailable": 4
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "7f1a8c50-18ab-4f8a-b57d-91efb485997e",
                "resourceVersion": "366",
                "generation": 1,
                "creationTimestamp": "2023-06-20T00:03:01Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "unavailableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "False",
                        "lastUpdateTime": "2023-06-20T00:03:16Z",
                        "lastTransitionTime": "2023-06-20T00:03:16Z",
                        "reason": "MinimumReplicasUnavailable",
                        "message": "Deployment does not have minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2023-06-20T00:03:16Z",
                        "lastTransitionTime": "2023-06-20T00:03:16Z",
                        "reason": "ReplicaSetUpdated",
                        "message": "ReplicaSet \"coredns-5d78c9869d\" is progressing."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5d78c9869d",
                "namespace": "kube-system",
                "uid": "ae5f76e7-7779-4eee-bdb7-61389caca83e",
                "resourceVersion": "360",
                "generation": 1,
                "creationTimestamp": "2023-06-20T00:03:16Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5d78c9869d"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "7f1a8c50-18ab-4f8a-b57d-91efb485997e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "5d78c9869d"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "5d78c9869d"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5d78c9869d-n2s9v",
                "generateName": "coredns-5d78c9869d-",
                "namespace": "kube-system",
                "uid": "dd09b2d6-f794-4173-883b-c56ffa67aee4",
                "resourceVersion": "362",
                "creationTimestamp": "2023-06-20T00:03:16Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5d78c9869d"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-5d78c9869d",
                        "uid": "ae5f76e7-7779-4eee-bdb7-61389caca83e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-zpnk5",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-zpnk5",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:16Z",
                        "reason": "Unschedulable",
                        "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.."
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-r2gvx",
                "generateName": "coredns-5d78c9869d-",
                "namespace": "kube-system",
                "uid": "3ae8b692-a25a-49f2-b282-69b4c9c63c30",
                "resourceVersion": "356",
                "creationTimestamp": "2023-06-20T00:03:16Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5d78c9869d"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-5d78c9869d",
                        "uid": "ae5f76e7-7779-4eee-bdb7-61389caca83e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-n774h",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-n774h",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:16Z",
                        "reason": "Unschedulable",
                        "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.."
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-kubernetes-p2-control-plane",
                "namespace": "kube-system",
                "uid": "c47d44b1-e844-4b92-a67a-b2a2847ca62b",
                "resourceVersion": "304",
                "creationTimestamp": "2023-06-20T00:03:00Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.19.0.2:2379",
                    "kubernetes.io/config.hash": "5f32e5f6fdd5a333e86e9247dd0cc8e1",
                    "kubernetes.io/config.mirror": "5f32e5f6fdd5a333e86e9247dd0cc8e1",
                    "kubernetes.io/config.seen": "2023-06-20T00:02:55.939757147Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "kubernetes-p2-control-plane",
                        "uid": "098404d3-0792-47ef-9811-1fdaa9e44b18",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "registry.k8s.io/etcd:3.5.7-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://172.19.0.2:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--experimental-watch-progress-notify-interval=5s",
                            "--initial-advertise-peer-urls=https://172.19.0.2:2380",
                            "--initial-cluster=kubernetes-p2-control-plane=https://172.19.0.2:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://172.19.0.2:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://172.19.0.2:2380",
                            "--name=kubernetes-p2-control-plane",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/etc/kubernetes/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health?exclude=NOSPACE\u0026serializable=true",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/health?serializable=false",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "kubernetes-p2-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:02Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:14Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:14Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:02Z"
                    }
                ],
                "hostIP": "172.19.0.2",
                "podIP": "172.19.0.2",
                "podIPs": [
                    {
                        "ip": "172.19.0.2"
                    }
                ],
                "startTime": "2023-06-20T00:03:02Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-20T00:02:57Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/etcd:3.5.7-0",
                        "imageID": "sha256:86b6af7dd652c1b38118be1c338e9354b33469e69a218f7e290a0ca5304ad681",
                        "containerID": "containerd://01ea38881faf4d2635201cdbedc5eb450331fe0b494dd6438844fc31724e521a",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-kubernetes-p2-control-plane",
                "namespace": "kube-system",
                "uid": "06fa457a-a396-4769-9091-04dd9ea18dcb",
                "resourceVersion": "298",
                "creationTimestamp": "2023-06-20T00:03:02Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.19.0.2:6443",
                    "kubernetes.io/config.hash": "22f3253541b5c24ccce69be6bc04b946",
                    "kubernetes.io/config.mirror": "22f3253541b5c24ccce69be6bc04b946",
                    "kubernetes.io/config.seen": "2023-06-20T00:03:01.948137446Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "kubernetes-p2-control-plane",
                        "uid": "098404d3-0792-47ef-9811-1fdaa9e44b18",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "registry.k8s.io/kube-apiserver:v1.27.3",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=172.19.0.2",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--runtime-config=",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.19.0.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 6443,
                                "host": "172.19.0.2",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.19.0.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "kubernetes-p2-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:02Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:11Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:11Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:02Z"
                    }
                ],
                "hostIP": "172.19.0.2",
                "podIP": "172.19.0.2",
                "podIPs": [
                    {
                        "ip": "172.19.0.2"
                    }
                ],
                "startTime": "2023-06-20T00:03:02Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-20T00:02:57Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-apiserver:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762",
                        "containerID": "containerd://dfef8db9eca9f1d47dc81f9a7ccbee8a61899ddc224e27ded4974e1567b9d545",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-kubernetes-p2-control-plane",
                "namespace": "kube-system",
                "uid": "21d97a1b-c87f-4e49-ab98-c40482de53a7",
                "resourceVersion": "288",
                "creationTimestamp": "2023-06-20T00:03:02Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "b8e6f500f740af58aa5b54665c898fc6",
                    "kubernetes.io/config.mirror": "b8e6f500f740af58aa5b54665c898fc6",
                    "kubernetes.io/config.seen": "2023-06-20T00:03:01.948132156Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "kubernetes-p2-control-plane",
                        "uid": "098404d3-0792-47ef-9811-1fdaa9e44b18",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "registry.k8s.io/kube-controller-manager:v1.27.3",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=10.0.0.0/16",
                            "--cluster-name=kubernetes-p2",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--enable-hostpath-provisioner=true",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "kubernetes-p2-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:02Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:07Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:07Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:02Z"
                    }
                ],
                "hostIP": "172.19.0.2",
                "podIP": "172.19.0.2",
                "podIPs": [
                    {
                        "ip": "172.19.0.2"
                    }
                ],
                "startTime": "2023-06-20T00:03:02Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-20T00:02:57Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-controller-manager:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7",
                        "containerID": "containerd://faac2d01caeb0713a4a9bb55525fc8e57df8fb76aa38f0714c9a815e0fdfe1dd",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-65td2",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "e3a543c2-a1b3-4afc-bcd6-646394b696ad",
                "resourceVersion": "460",
                "creationTimestamp": "2023-06-20T00:03:22Z",
                "labels": {
                    "controller-revision-hash": "56999f657b",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "eb396b8b-4f8e-4e11-ab54-b2ac59d2b2d6",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-h2dl9",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-h2dl9",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "kubernetes-p2-worker",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "kubernetes-p2-worker"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:23Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:24Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:24Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:22Z"
                    }
                ],
                "hostIP": "172.19.0.3",
                "podIP": "172.19.0.3",
                "podIPs": [
                    {
                        "ip": "172.19.0.3"
                    }
                ],
                "startTime": "2023-06-20T00:03:23Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-20T00:03:24Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                        "containerID": "containerd://74637defc72f59e3ee36e431dfb41167dcd53946ad566fdee78a7051e43c29a0",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-8kzfm",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "e8da5aa8-c948-4bf2-b41d-164c508a814f",
                "resourceVersion": "372",
                "creationTimestamp": "2023-06-20T00:03:15Z",
                "labels": {
                    "controller-revision-hash": "56999f657b",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "eb396b8b-4f8e-4e11-ab54-b2ac59d2b2d6",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-w2qfx",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-w2qfx",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "kubernetes-p2-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "kubernetes-p2-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:15Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:16Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:16Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:15Z"
                    }
                ],
                "hostIP": "172.19.0.2",
                "podIP": "172.19.0.2",
                "podIPs": [
                    {
                        "ip": "172.19.0.2"
                    }
                ],
                "startTime": "2023-06-20T00:03:15Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-20T00:03:16Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                        "containerID": "containerd://b907f9a95d23c34033f35e7eaae3c18708696f0ba65bce7c82a8f620163dcb52",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-cd4rl",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "67d6293e-d809-4482-8e03-c7ae99d25bb2",
                "resourceVersion": "467",
                "creationTimestamp": "2023-06-20T00:03:23Z",
                "labels": {
                    "controller-revision-hash": "56999f657b",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "eb396b8b-4f8e-4e11-ab54-b2ac59d2b2d6",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-lnp9z",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-lnp9z",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "kubernetes-p2-worker2",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "kubernetes-p2-worker2"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:24Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:25Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:25Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:23Z"
                    }
                ],
                "hostIP": "172.19.0.5",
                "podIP": "172.19.0.5",
                "podIPs": [
                    {
                        "ip": "172.19.0.5"
                    }
                ],
                "startTime": "2023-06-20T00:03:24Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-20T00:03:25Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                        "containerID": "containerd://77b524332a765426b2460548a56bf03bddc9290d6c4b0ff93446f436d039416c",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-vzfdl",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "f5b6faeb-9a13-46af-a6c0-a1933269ea27",
                "resourceVersion": "454",
                "creationTimestamp": "2023-06-20T00:03:21Z",
                "labels": {
                    "controller-revision-hash": "56999f657b",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "eb396b8b-4f8e-4e11-ab54-b2ac59d2b2d6",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-bvqvj",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-bvqvj",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "kubernetes-p2-worker3",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "kubernetes-p2-worker3"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:22Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:23Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:23Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:21Z"
                    }
                ],
                "hostIP": "172.19.0.4",
                "podIP": "172.19.0.4",
                "podIPs": [
                    {
                        "ip": "172.19.0.4"
                    }
                ],
                "startTime": "2023-06-20T00:03:22Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-20T00:03:23Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                        "containerID": "containerd://9f7e03eaa72290c07f46ef48f3a3ee81f17db491fec79eab45cc6aa448866dd0",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-kubernetes-p2-control-plane",
                "namespace": "kube-system",
                "uid": "183058b1-ce85-48d9-b3c4-4d10b6a9a8b9",
                "resourceVersion": "291",
                "creationTimestamp": "2023-06-20T00:03:02Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "4fcc608b97b60341680a4ed345e71e6c",
                    "kubernetes.io/config.mirror": "4fcc608b97b60341680a4ed345e71e6c",
                    "kubernetes.io/config.seen": "2023-06-20T00:03:01.948134986Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "kubernetes-p2-control-plane",
                        "uid": "098404d3-0792-47ef-9811-1fdaa9e44b18",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "registry.k8s.io/kube-scheduler:v1.27.3",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "kubernetes-p2-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:02Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:08Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:08Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-06-20T00:03:02Z"
                    }
                ],
                "hostIP": "172.19.0.2",
                "podIP": "172.19.0.2",
                "podIPs": [
                    {
                        "ip": "172.19.0.2"
                    }
                ],
                "startTime": "2023-06-20T00:03:02Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2023-06-20T00:02:57Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-scheduler:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2",
                        "containerID": "containerd://8b6aa420ff263522f8fa15ead1028d32df460f62da40b7e6b5458ea946f716da",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-5d78c9869d-n2s9v ====
==== END logs for container coredns of pod kube-system/coredns-5d78c9869d-n2s9v ====
==== START logs for container coredns of pod kube-system/coredns-5d78c9869d-r2gvx ====
==== END logs for container coredns of pod kube-system/coredns-5d78c9869d-r2gvx ====
==== START logs for container etcd of pod kube-system/etcd-kubernetes-p2-control-plane ====
{"level":"info","ts":"2023-06-20T00:02:57.868Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://172.19.0.2:2379","--cert-file=/etc/kubernetes/pki/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://172.19.0.2:2380","--initial-cluster=kubernetes-p2-control-plane=https://172.19.0.2:2380","--key-file=/etc/kubernetes/pki/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://172.19.0.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://172.19.0.2:2380","--name=kubernetes-p2-control-plane","--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/etc/kubernetes/pki/etcd/peer.key","--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","--snapshot-count=10000","--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"]}
{"level":"info","ts":"2023-06-20T00:02:57.868Z","caller":"embed/etcd.go:124","msg":"configuring peer listeners","listen-peer-urls":["https://172.19.0.2:2380"]}
{"level":"info","ts":"2023-06-20T00:02:57.868Z","caller":"embed/etcd.go:484","msg":"starting with peer TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/peer.crt, key = /etc/kubernetes/pki/etcd/peer.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-06-20T00:02:57.869Z","caller":"embed/etcd.go:132","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://172.19.0.2:2379"]}
{"level":"info","ts":"2023-06-20T00:02:57.869Z","caller":"embed/etcd.go:306","msg":"starting an etcd server","etcd-version":"3.5.7","git-sha":"215b53cf3","go-version":"go1.17.13","go-os":"linux","go-arch":"amd64","max-cpu-set":16,"max-cpu-available":16,"member-initialized":false,"name":"kubernetes-p2-control-plane","data-dir":"/var/lib/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://172.19.0.2:2380"],"listen-peer-urls":["https://172.19.0.2:2380"],"advertise-client-urls":["https://172.19.0.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.19.0.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"kubernetes-p2-control-plane=https://172.19.0.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2023-06-20T00:02:57.873Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/etcd/member/snap/db","took":"4.365634ms"}
{"level":"info","ts":"2023-06-20T00:02:57.877Z","caller":"etcdserver/raft.go:494","msg":"starting local member","local-member-id":"d7380397c3ec4b90","cluster-id":"17d3753d35ddbc03"}
{"level":"info","ts":"2023-06-20T00:02:57.877Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"d7380397c3ec4b90 switched to configuration voters=()"}
{"level":"info","ts":"2023-06-20T00:02:57.877Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"d7380397c3ec4b90 became follower at term 0"}
{"level":"info","ts":"2023-06-20T00:02:57.877Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft d7380397c3ec4b90 [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2023-06-20T00:02:57.877Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"d7380397c3ec4b90 became follower at term 1"}
{"level":"info","ts":"2023-06-20T00:02:57.877Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"d7380397c3ec4b90 switched to configuration voters=(15508149267212290960)"}
{"level":"warn","ts":"2023-06-20T00:02:57.883Z","caller":"auth/store.go:1234","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2023-06-20T00:02:57.889Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2023-06-20T00:02:57.892Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2023-06-20T00:02:57.895Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"d7380397c3ec4b90","local-server-version":"3.5.7","cluster-version":"to_be_decided"}
{"level":"info","ts":"2023-06-20T00:02:57.895Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"d7380397c3ec4b90","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2023-06-20T00:02:57.895Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2023-06-20T00:02:57.895Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2023-06-20T00:02:57.895Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2023-06-20T00:02:57.896Z","caller":"embed/etcd.go:687","msg":"starting with client TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/server.crt, key = /etc/kubernetes/pki/etcd/server.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-06-20T00:02:57.896Z","caller":"embed/etcd.go:586","msg":"serving peer traffic","address":"172.19.0.2:2380"}
{"level":"info","ts":"2023-06-20T00:02:57.896Z","caller":"embed/etcd.go:558","msg":"cmux::serve","address":"172.19.0.2:2380"}
{"level":"info","ts":"2023-06-20T00:02:57.896Z","caller":"embed/etcd.go:275","msg":"now serving peer/client/metrics","local-member-id":"d7380397c3ec4b90","initial-advertise-peer-urls":["https://172.19.0.2:2380"],"listen-peer-urls":["https://172.19.0.2:2380"],"advertise-client-urls":["https://172.19.0.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.19.0.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2023-06-20T00:02:57.896Z","caller":"embed/etcd.go:762","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2023-06-20T00:02:57.897Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"d7380397c3ec4b90 switched to configuration voters=(15508149267212290960)"}
{"level":"info","ts":"2023-06-20T00:02:57.897Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"17d3753d35ddbc03","local-member-id":"d7380397c3ec4b90","added-peer-id":"d7380397c3ec4b90","added-peer-peer-urls":["https://172.19.0.2:2380"]}
{"level":"info","ts":"2023-06-20T00:02:58.477Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"d7380397c3ec4b90 is starting a new election at term 1"}
{"level":"info","ts":"2023-06-20T00:02:58.477Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"d7380397c3ec4b90 became pre-candidate at term 1"}
{"level":"info","ts":"2023-06-20T00:02:58.477Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"d7380397c3ec4b90 received MsgPreVoteResp from d7380397c3ec4b90 at term 1"}
{"level":"info","ts":"2023-06-20T00:02:58.478Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"d7380397c3ec4b90 became candidate at term 2"}
{"level":"info","ts":"2023-06-20T00:02:58.478Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"d7380397c3ec4b90 received MsgVoteResp from d7380397c3ec4b90 at term 2"}
{"level":"info","ts":"2023-06-20T00:02:58.478Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"d7380397c3ec4b90 became leader at term 2"}
{"level":"info","ts":"2023-06-20T00:02:58.478Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: d7380397c3ec4b90 elected leader d7380397c3ec4b90 at term 2"}
{"level":"info","ts":"2023-06-20T00:02:58.479Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2023-06-20T00:02:58.481Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-06-20T00:02:58.481Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"d7380397c3ec4b90","local-member-attributes":"{Name:kubernetes-p2-control-plane ClientURLs:[https://172.19.0.2:2379]}","request-path":"/0/members/d7380397c3ec4b90/attributes","cluster-id":"17d3753d35ddbc03","publish-timeout":"7s"}
{"level":"info","ts":"2023-06-20T00:02:58.481Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-06-20T00:02:58.481Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2023-06-20T00:02:58.481Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2023-06-20T00:02:58.482Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2023-06-20T00:02:58.482Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"172.19.0.2:2379"}
{"level":"info","ts":"2023-06-20T00:02:58.488Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"17d3753d35ddbc03","local-member-id":"d7380397c3ec4b90","cluster-version":"3.5"}
{"level":"info","ts":"2023-06-20T00:02:58.488Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2023-06-20T00:02:58.488Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2023-06-20T00:03:07.389Z","caller":"traceutil/trace.go:171","msg":"trace[1918717466] transaction","detail":"{read_only:false; response_revision:287; number_of_response:1; }","duration":"112.415376ms","start":"2023-06-20T00:03:07.277Z","end":"2023-06-20T00:03:07.389Z","steps":["trace[1918717466] 'process raft request'  (duration: 30.483584ms)","trace[1918717466] 'compare'  (duration: 81.873411ms)"],"step_count":2}
==== END logs for container etcd of pod kube-system/etcd-kubernetes-p2-control-plane ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-kubernetes-p2-control-plane ====
I0620 00:02:57.697522       1 server.go:553] external host was not specified, using 172.19.0.2
I0620 00:02:57.698142       1 server.go:166] Version: v1.27.3
I0620 00:02:57.698162       1 server.go:168] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0620 00:02:57.866115       1 shared_informer.go:311] Waiting for caches to sync for node_authorizer
I0620 00:02:57.871764       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0620 00:02:57.871771       1 plugins.go:161] Loaded 13 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,ClusterTrustBundleAttest,CertificateSubjectRestriction,ValidatingAdmissionPolicy,ValidatingAdmissionWebhook,ResourceQuota.
I0620 00:02:58.492295       1 handler.go:232] Adding GroupVersion apiextensions.k8s.io v1 to ResourceManager
W0620 00:02:58.492307       1 genericapiserver.go:752] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I0620 00:02:58.492878       1 instance.go:282] Using reconciler: lease
I0620 00:02:58.578250       1 handler.go:232] Adding GroupVersion  v1 to ResourceManager
I0620 00:02:58.578402       1 instance.go:651] API group "internal.apiserver.k8s.io" is not enabled, skipping.
I0620 00:02:58.755446       1 instance.go:651] API group "resource.k8s.io" is not enabled, skipping.
I0620 00:02:58.761459       1 handler.go:232] Adding GroupVersion authentication.k8s.io v1 to ResourceManager
W0620 00:02:58.761472       1 genericapiserver.go:752] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W0620 00:02:58.761476       1 genericapiserver.go:752] Skipping API authentication.k8s.io/v1alpha1 because it has no resources.
I0620 00:02:58.762444       1 handler.go:232] Adding GroupVersion authorization.k8s.io v1 to ResourceManager
W0620 00:02:58.762450       1 genericapiserver.go:752] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
I0620 00:02:58.763496       1 handler.go:232] Adding GroupVersion autoscaling v2 to ResourceManager
I0620 00:02:58.763801       1 handler.go:232] Adding GroupVersion autoscaling v1 to ResourceManager
W0620 00:02:58.763806       1 genericapiserver.go:752] Skipping API autoscaling/v2beta1 because it has no resources.
W0620 00:02:58.763808       1 genericapiserver.go:752] Skipping API autoscaling/v2beta2 because it has no resources.
I0620 00:02:58.765032       1 handler.go:232] Adding GroupVersion batch v1 to ResourceManager
W0620 00:02:58.765038       1 genericapiserver.go:752] Skipping API batch/v1beta1 because it has no resources.
I0620 00:02:58.765954       1 handler.go:232] Adding GroupVersion certificates.k8s.io v1 to ResourceManager
W0620 00:02:58.765959       1 genericapiserver.go:752] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W0620 00:02:58.765962       1 genericapiserver.go:752] Skipping API certificates.k8s.io/v1alpha1 because it has no resources.
I0620 00:02:58.766776       1 handler.go:232] Adding GroupVersion coordination.k8s.io v1 to ResourceManager
W0620 00:02:58.766781       1 genericapiserver.go:752] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W0620 00:02:58.767370       1 genericapiserver.go:752] Skipping API discovery.k8s.io/v1beta1 because it has no resources.
I0620 00:02:58.767602       1 handler.go:232] Adding GroupVersion discovery.k8s.io v1 to ResourceManager
I0620 00:02:58.768899       1 handler.go:232] Adding GroupVersion networking.k8s.io v1 to ResourceManager
W0620 00:02:58.768906       1 genericapiserver.go:752] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W0620 00:02:58.768909       1 genericapiserver.go:752] Skipping API networking.k8s.io/v1alpha1 because it has no resources.
I0620 00:02:58.769794       1 handler.go:232] Adding GroupVersion node.k8s.io v1 to ResourceManager
W0620 00:02:58.769804       1 genericapiserver.go:752] Skipping API node.k8s.io/v1beta1 because it has no resources.
W0620 00:02:58.769806       1 genericapiserver.go:752] Skipping API node.k8s.io/v1alpha1 because it has no resources.
I0620 00:02:58.770593       1 handler.go:232] Adding GroupVersion policy v1 to ResourceManager
W0620 00:02:58.770598       1 genericapiserver.go:752] Skipping API policy/v1beta1 because it has no resources.
I0620 00:02:58.771951       1 handler.go:232] Adding GroupVersion rbac.authorization.k8s.io v1 to ResourceManager
W0620 00:02:58.771956       1 genericapiserver.go:752] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W0620 00:02:58.771959       1 genericapiserver.go:752] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
I0620 00:02:58.772653       1 handler.go:232] Adding GroupVersion scheduling.k8s.io v1 to ResourceManager
W0620 00:02:58.772659       1 genericapiserver.go:752] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W0620 00:02:58.772661       1 genericapiserver.go:752] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
I0620 00:02:58.774031       1 handler.go:232] Adding GroupVersion storage.k8s.io v1 to ResourceManager
W0620 00:02:58.774038       1 genericapiserver.go:752] Skipping API storage.k8s.io/v1beta1 because it has no resources.
W0620 00:02:58.774040       1 genericapiserver.go:752] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
I0620 00:02:58.775115       1 handler.go:232] Adding GroupVersion flowcontrol.apiserver.k8s.io v1beta3 to ResourceManager
I0620 00:02:58.775520       1 handler.go:232] Adding GroupVersion flowcontrol.apiserver.k8s.io v1beta2 to ResourceManager
W0620 00:02:58.775526       1 genericapiserver.go:752] Skipping API flowcontrol.apiserver.k8s.io/v1beta1 because it has no resources.
W0620 00:02:58.775528       1 genericapiserver.go:752] Skipping API flowcontrol.apiserver.k8s.io/v1alpha1 because it has no resources.
I0620 00:02:58.777536       1 handler.go:232] Adding GroupVersion apps v1 to ResourceManager
W0620 00:02:58.777542       1 genericapiserver.go:752] Skipping API apps/v1beta2 because it has no resources.
W0620 00:02:58.777544       1 genericapiserver.go:752] Skipping API apps/v1beta1 because it has no resources.
I0620 00:02:58.778588       1 handler.go:232] Adding GroupVersion admissionregistration.k8s.io v1 to ResourceManager
W0620 00:02:58.778593       1 genericapiserver.go:752] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
W0620 00:02:58.778596       1 genericapiserver.go:752] Skipping API admissionregistration.k8s.io/v1alpha1 because it has no resources.
I0620 00:02:58.779309       1 handler.go:232] Adding GroupVersion events.k8s.io v1 to ResourceManager
W0620 00:02:58.779314       1 genericapiserver.go:752] Skipping API events.k8s.io/v1beta1 because it has no resources.
I0620 00:02:58.785210       1 handler.go:232] Adding GroupVersion apiregistration.k8s.io v1 to ResourceManager
W0620 00:02:58.785219       1 genericapiserver.go:752] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0620 00:02:59.054952       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0620 00:02:59.054953       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0620 00:02:59.055152       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/etc/kubernetes/pki/apiserver.crt::/etc/kubernetes/pki/apiserver.key"
I0620 00:02:59.055513       1 secure_serving.go:210] Serving securely on [::]:6443
I0620 00:02:59.055541       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0620 00:02:59.055593       1 aggregator.go:150] waiting for initial CRD sync...
I0620 00:02:59.055597       1 handler_discovery.go:392] Starting ResourceDiscoveryManager
I0620 00:02:59.055621       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0620 00:02:59.055632       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0620 00:02:59.055646       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0620 00:02:59.055658       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I0620 00:02:59.055676       1 controller.go:83] Starting OpenAPI AggregationController
I0620 00:02:59.055706       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0620 00:02:59.055752       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0620 00:02:59.055775       1 controller.go:121] Starting legacy_token_tracking_controller
I0620 00:02:59.055783       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I0620 00:02:59.055788       1 controller.go:85] Starting OpenAPI V3 controller
I0620 00:02:59.055791       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/etc/kubernetes/pki/front-proxy-client.crt::/etc/kubernetes/pki/front-proxy-client.key"
I0620 00:02:59.055802       1 naming_controller.go:291] Starting NamingConditionController
I0620 00:02:59.055816       1 establishing_controller.go:76] Starting EstablishingController
I0620 00:02:59.055829       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0620 00:02:59.055831       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0620 00:02:59.055840       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0620 00:02:59.055846       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0620 00:02:59.055852       1 crd_finalizer.go:266] Starting CRDFinalizer
I0620 00:02:59.055854       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0620 00:02:59.055865       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I0620 00:02:59.055888       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0620 00:02:59.055944       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0620 00:02:59.055757       1 controller.go:85] Starting OpenAPI controller
I0620 00:02:59.055980       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0620 00:02:59.056000       1 apf_controller.go:361] Starting API Priority and Fairness config controller
I0620 00:02:59.056019       1 available_controller.go:423] Starting AvailableConditionController
I0620 00:02:59.056025       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0620 00:02:59.066254       1 shared_informer.go:318] Caches are synced for node_authorizer
E0620 00:02:59.117483       1 controller.go:146] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
I0620 00:02:59.155991       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I0620 00:02:59.156006       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0620 00:02:59.156031       1 shared_informer.go:318] Caches are synced for crd-autoregister
I0620 00:02:59.156031       1 shared_informer.go:318] Caches are synced for configmaps
I0620 00:02:59.156034       1 apf_controller.go:366] Running API Priority and Fairness config worker
I0620 00:02:59.156041       1 apf_controller.go:369] Running API Priority and Fairness periodic rebalancing process
I0620 00:02:59.156043       1 aggregator.go:152] initial CRD sync complete...
I0620 00:02:59.156049       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0620 00:02:59.156054       1 autoregister_controller.go:141] Starting autoregister controller
I0620 00:02:59.156060       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0620 00:02:59.156066       1 cache.go:39] Caches are synced for autoregister controller
I0620 00:02:59.156718       1 controller.go:624] quota admission added evaluator for: namespaces
I0620 00:02:59.319306       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I0620 00:02:59.934557       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0620 00:03:00.059998       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0620 00:03:00.063199       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0620 00:03:00.063207       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0620 00:03:00.400373       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0620 00:03:00.431002       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0620 00:03:00.471531       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W0620 00:03:00.476306       1 lease.go:251] Resetting endpoints for master service "kubernetes" to [172.19.0.2]
I0620 00:03:00.476720       1 controller.go:624] quota admission added evaluator for: endpoints
I0620 00:03:00.479514       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0620 00:03:01.930948       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I0620 00:03:01.936246       1 controller.go:624] quota admission added evaluator for: deployments.apps
I0620 00:03:01.944647       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I0620 00:03:01.956724       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I0620 00:03:15.946847       1 controller.go:624] quota admission added evaluator for: controllerrevisions.apps
I0620 00:03:16.109404       1 controller.go:624] quota admission added evaluator for: replicasets.apps
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-kubernetes-p2-control-plane ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-kubernetes-p2-control-plane ====
I0620 00:02:57.792266       1 serving.go:348] Generated self-signed cert in-memory
I0620 00:02:58.064520       1 controllermanager.go:187] "Starting" version="v1.27.3"
I0620 00:02:58.064531       1 controllermanager.go:189] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0620 00:02:58.065067       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0620 00:02:58.065082       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0620 00:02:58.065413       1 secure_serving.go:210] Serving securely on 127.0.0.1:10257
I0620 00:02:58.065488       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0620 00:02:58.065520       1 leaderelection.go:245] attempting to acquire leader lease kube-system/kube-controller-manager...
E0620 00:02:59.067733       1 leaderelection.go:327] error retrieving resource lock kube-system/kube-controller-manager: leases.coordination.k8s.io "kube-controller-manager" is forbidden: User "system:kube-controller-manager" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-system"
I0620 00:03:02.501472       1 leaderelection.go:255] successfully acquired lease kube-system/kube-controller-manager
I0620 00:03:02.501571       1 event.go:307] "Event occurred" object="kube-system/kube-controller-manager" fieldPath="" kind="Lease" apiVersion="coordination.k8s.io/v1" type="Normal" reason="LeaderElection" message="kubernetes-p2-control-plane_f543fb58-74e1-4e60-8de8-978c2aff2da9 became leader"
I0620 00:03:02.505203       1 shared_informer.go:311] Waiting for caches to sync for tokens
I0620 00:03:02.509904       1 controllermanager.go:638] "Started controller" controller="replicaset"
I0620 00:03:02.509999       1 replica_set.go:201] "Starting controller" name="replicaset"
I0620 00:03:02.510008       1 shared_informer.go:311] Waiting for caches to sync for ReplicaSet
I0620 00:03:02.515242       1 controllermanager.go:638] "Started controller" controller="bootstrapsigner"
I0620 00:03:02.515293       1 shared_informer.go:311] Waiting for caches to sync for bootstrap_signer
E0620 00:03:02.519484       1 core.go:92] "Failed to start service controller" err="WARNING: no cloud provider provided, services of type LoadBalancer will fail"
I0620 00:03:02.519496       1 controllermanager.go:616] "Warning: skipping controller" controller="service"
I0620 00:03:02.525181       1 garbagecollector.go:155] "Starting controller" controller="garbagecollector"
I0620 00:03:02.525187       1 controllermanager.go:638] "Started controller" controller="garbagecollector"
I0620 00:03:02.525193       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I0620 00:03:02.525213       1 graph_builder.go:294] "Running" component="GraphBuilder"
I0620 00:03:02.535647       1 controllermanager.go:638] "Started controller" controller="namespace"
I0620 00:03:02.535706       1 namespace_controller.go:197] "Starting namespace controller"
I0620 00:03:02.535710       1 shared_informer.go:311] Waiting for caches to sync for namespace
I0620 00:03:02.540440       1 controllermanager.go:638] "Started controller" controller="daemonset"
I0620 00:03:02.540528       1 daemon_controller.go:291] "Starting daemon sets controller"
I0620 00:03:02.540536       1 shared_informer.go:311] Waiting for caches to sync for daemon sets
I0620 00:03:02.547357       1 node_lifecycle_controller.go:431] "Controller will reconcile labels"
I0620 00:03:02.547381       1 controllermanager.go:638] "Started controller" controller="nodelifecycle"
I0620 00:03:02.547458       1 node_lifecycle_controller.go:465] "Sending events to api server"
I0620 00:03:02.547469       1 node_lifecycle_controller.go:476] "Starting node controller"
I0620 00:03:02.547474       1 shared_informer.go:311] Waiting for caches to sync for taint
I0620 00:03:02.554794       1 controllermanager.go:638] "Started controller" controller="endpointslicemirroring"
I0620 00:03:02.554859       1 endpointslicemirroring_controller.go:211] Starting EndpointSliceMirroring controller
I0620 00:03:02.554865       1 shared_informer.go:311] Waiting for caches to sync for endpoint_slice_mirroring
I0620 00:03:02.605553       1 shared_informer.go:318] Caches are synced for tokens
I0620 00:03:02.753819       1 controllermanager.go:638] "Started controller" controller="disruption"
I0620 00:03:02.753848       1 disruption.go:423] Sending events to api server.
I0620 00:03:02.753868       1 disruption.go:434] Starting disruption controller
I0620 00:03:02.753872       1 shared_informer.go:311] Waiting for caches to sync for disruption
I0620 00:03:02.908282       1 controllermanager.go:638] "Started controller" controller="csrcleaner"
I0620 00:03:02.908296       1 core.go:228] "Warning: configure-cloud-routes is set, but no cloud provider specified. Will not configure cloud provider routes."
I0620 00:03:02.908302       1 controllermanager.go:616] "Warning: skipping controller" controller="route"
I0620 00:03:02.908333       1 cleaner.go:82] Starting CSR cleaner controller
I0620 00:03:03.056019       1 controllermanager.go:638] "Started controller" controller="pvc-protection"
I0620 00:03:03.056062       1 pvc_protection_controller.go:102] "Starting PVC protection controller"
I0620 00:03:03.056068       1 shared_informer.go:311] Waiting for caches to sync for PVC protection
I0620 00:03:03.207699       1 controllermanager.go:638] "Started controller" controller="endpointslice"
I0620 00:03:03.208254       1 endpointslice_controller.go:252] Starting endpoint slice controller
I0620 00:03:03.208268       1 shared_informer.go:311] Waiting for caches to sync for endpoint_slice
I0620 00:03:03.355459       1 controllermanager.go:638] "Started controller" controller="deployment"
I0620 00:03:03.355506       1 deployment_controller.go:168] "Starting controller" controller="deployment"
I0620 00:03:03.355511       1 shared_informer.go:311] Waiting for caches to sync for deployment
I0620 00:03:03.506018       1 controllermanager.go:638] "Started controller" controller="cronjob"
I0620 00:03:03.506064       1 cronjob_controllerv2.go:139] "Starting cronjob controller v2"
I0620 00:03:03.506069       1 shared_informer.go:311] Waiting for caches to sync for cronjob
I0620 00:03:03.655811       1 controllermanager.go:638] "Started controller" controller="persistentvolume-binder"
I0620 00:03:03.655877       1 pv_controller_base.go:323] "Starting persistent volume controller"
I0620 00:03:03.655883       1 shared_informer.go:311] Waiting for caches to sync for persistent volume
I0620 00:03:03.805008       1 controllermanager.go:638] "Started controller" controller="attachdetach"
I0620 00:03:03.805057       1 attach_detach_controller.go:343] "Starting attach detach controller"
I0620 00:03:03.805062       1 shared_informer.go:311] Waiting for caches to sync for attach detach
I0620 00:03:03.956065       1 controllermanager.go:638] "Started controller" controller="clusterrole-aggregation"
I0620 00:03:03.956110       1 clusterroleaggregation_controller.go:189] "Starting ClusterRoleAggregator controller"
I0620 00:03:03.956120       1 shared_informer.go:311] Waiting for caches to sync for ClusterRoleAggregator
I0620 00:03:04.105737       1 controllermanager.go:638] "Started controller" controller="ephemeral-volume"
I0620 00:03:04.105767       1 controller.go:169] "Starting ephemeral volume controller"
I0620 00:03:04.105774       1 shared_informer.go:311] Waiting for caches to sync for ephemeral
I0620 00:03:04.255935       1 controllermanager.go:638] "Started controller" controller="replicationcontroller"
I0620 00:03:04.255987       1 replica_set.go:201] "Starting controller" name="replicationcontroller"
I0620 00:03:04.255994       1 shared_informer.go:311] Waiting for caches to sync for ReplicationController
I0620 00:03:04.558236       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="serviceaccounts"
I0620 00:03:04.558255       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="replicasets.apps"
I0620 00:03:04.558274       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="poddisruptionbudgets.policy"
I0620 00:03:04.558285       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="endpointslices.discovery.k8s.io"
W0620 00:03:04.558293       1 shared_informer.go:592] resyncPeriod 12h41m54.531280696s is smaller than resyncCheckPeriod 13h16m12.467807117s and the informer has already started. Changing it to 13h16m12.467807117s
I0620 00:03:04.558332       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="cronjobs.batch"
I0620 00:03:04.558349       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="limitranges"
I0620 00:03:04.558361       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="endpoints"
I0620 00:03:04.558393       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="podtemplates"
I0620 00:03:04.558405       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="leases.coordination.k8s.io"
I0620 00:03:04.558414       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="statefulsets.apps"
I0620 00:03:04.558423       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="jobs.batch"
I0620 00:03:04.558445       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="networkpolicies.networking.k8s.io"
I0620 00:03:04.558460       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="csistoragecapacities.storage.k8s.io"
I0620 00:03:04.558470       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="controllerrevisions.apps"
I0620 00:03:04.558484       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="daemonsets.apps"
I0620 00:03:04.558493       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="ingresses.networking.k8s.io"
I0620 00:03:04.558504       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="roles.rbac.authorization.k8s.io"
I0620 00:03:04.558513       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="deployments.apps"
I0620 00:03:04.558526       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="horizontalpodautoscalers.autoscaling"
I0620 00:03:04.558539       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="rolebindings.rbac.authorization.k8s.io"
I0620 00:03:04.558553       1 controllermanager.go:638] "Started controller" controller="resourcequota"
I0620 00:03:04.558561       1 resource_quota_controller.go:295] "Starting resource quota controller"
I0620 00:03:04.558568       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I0620 00:03:04.558578       1 resource_quota_monitor.go:304] "QuotaMonitor running"
I0620 00:03:04.708081       1 controllermanager.go:638] "Started controller" controller="job"
I0620 00:03:04.708115       1 job_controller.go:202] Starting job controller
I0620 00:03:04.708119       1 shared_informer.go:311] Waiting for caches to sync for job
E0620 00:03:04.753173       1 core.go:213] "Failed to start cloud node lifecycle controller" err="no cloud provider provided"
I0620 00:03:04.753187       1 controllermanager.go:616] "Warning: skipping controller" controller="cloud-node-lifecycle"
I0620 00:03:04.906048       1 controllermanager.go:638] "Started controller" controller="pv-protection"
I0620 00:03:04.906088       1 pv_protection_controller.go:78] "Starting PV protection controller"
I0620 00:03:04.906097       1 shared_informer.go:311] Waiting for caches to sync for PV protection
I0620 00:03:05.055787       1 controllermanager.go:638] "Started controller" controller="endpoint"
I0620 00:03:05.055837       1 endpoints_controller.go:172] Starting endpoint controller
I0620 00:03:05.055843       1 shared_informer.go:311] Waiting for caches to sync for endpoint
I0620 00:03:05.205721       1 controllermanager.go:638] "Started controller" controller="persistentvolume-expander"
I0620 00:03:05.205751       1 expand_controller.go:339] "Starting expand controller"
I0620 00:03:05.205756       1 shared_informer.go:311] Waiting for caches to sync for expand
I0620 00:03:05.254251       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-serving"
I0620 00:03:05.254264       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I0620 00:03:05.254298       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0620 00:03:05.254659       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-client"
I0620 00:03:05.254666       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I0620 00:03:05.254678       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0620 00:03:05.255043       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kube-apiserver-client"
I0620 00:03:05.255051       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I0620 00:03:05.255065       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0620 00:03:05.255458       1 controllermanager.go:638] "Started controller" controller="csrsigning"
I0620 00:03:05.255482       1 certificate_controller.go:112] Starting certificate controller "csrsigning-legacy-unknown"
I0620 00:03:05.255485       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I0620 00:03:05.255498       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0620 00:03:05.553552       1 controllermanager.go:638] "Started controller" controller="horizontalpodautoscaling"
I0620 00:03:05.553579       1 horizontal.go:200] "Starting HPA controller"
I0620 00:03:05.553583       1 shared_informer.go:311] Waiting for caches to sync for HPA
I0620 00:03:05.705663       1 controllermanager.go:638] "Started controller" controller="ttl"
I0620 00:03:05.705705       1 ttl_controller.go:124] "Starting TTL controller"
I0620 00:03:05.705711       1 shared_informer.go:311] Waiting for caches to sync for TTL
I0620 00:03:15.758933       1 range_allocator.go:111] "No Secondary Service CIDR provided. Skipping filtering out secondary service addresses"
I0620 00:03:15.758953       1 controllermanager.go:638] "Started controller" controller="nodeipam"
I0620 00:03:15.759034       1 node_ipam_controller.go:162] "Starting ipam controller"
I0620 00:03:15.759040       1 shared_informer.go:311] Waiting for caches to sync for node
I0620 00:03:15.763049       1 controllermanager.go:638] "Started controller" controller="ttl-after-finished"
I0620 00:03:15.763062       1 ttlafterfinished_controller.go:109] "Starting TTL after finished controller"
I0620 00:03:15.763068       1 shared_informer.go:311] Waiting for caches to sync for TTL after finished
I0620 00:03:15.767154       1 controllermanager.go:638] "Started controller" controller="root-ca-cert-publisher"
I0620 00:03:15.767208       1 publisher.go:101] Starting root CA certificate configmap publisher
I0620 00:03:15.767212       1 shared_informer.go:311] Waiting for caches to sync for crt configmap
I0620 00:03:15.771489       1 controllermanager.go:638] "Started controller" controller="podgc"
I0620 00:03:15.771544       1 gc_controller.go:103] Starting GC controller
I0620 00:03:15.771550       1 shared_informer.go:311] Waiting for caches to sync for GC
I0620 00:03:15.775660       1 controllermanager.go:638] "Started controller" controller="statefulset"
I0620 00:03:15.775754       1 stateful_set.go:161] "Starting stateful set controller"
I0620 00:03:15.775760       1 shared_informer.go:311] Waiting for caches to sync for stateful set
I0620 00:03:15.776830       1 controllermanager.go:638] "Started controller" controller="csrapproving"
I0620 00:03:15.776950       1 certificate_controller.go:112] Starting certificate controller "csrapproving"
I0620 00:03:15.777389       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrapproving
I0620 00:03:15.780970       1 controllermanager.go:638] "Started controller" controller="tokencleaner"
I0620 00:03:15.781020       1 tokencleaner.go:112] "Starting token cleaner controller"
I0620 00:03:15.781027       1 shared_informer.go:311] Waiting for caches to sync for token_cleaner
I0620 00:03:15.781034       1 shared_informer.go:318] Caches are synced for token_cleaner
I0620 00:03:15.784971       1 controllermanager.go:638] "Started controller" controller="serviceaccount"
I0620 00:03:15.785095       1 serviceaccounts_controller.go:111] "Starting service account controller"
I0620 00:03:15.785103       1 shared_informer.go:311] Waiting for caches to sync for service account
I0620 00:03:15.786200       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I0620 00:03:15.789206       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"kubernetes-p2-control-plane\" does not exist"
I0620 00:03:15.791239       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I0620 00:03:15.806526       1 shared_informer.go:318] Caches are synced for cronjob
I0620 00:03:15.806526       1 shared_informer.go:318] Caches are synced for PV protection
I0620 00:03:15.806537       1 shared_informer.go:318] Caches are synced for expand
I0620 00:03:15.806537       1 shared_informer.go:318] Caches are synced for TTL
I0620 00:03:15.816083       1 shared_informer.go:318] Caches are synced for bootstrap_signer
I0620 00:03:15.835908       1 shared_informer.go:318] Caches are synced for namespace
I0620 00:03:15.855018       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I0620 00:03:15.856154       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I0620 00:03:15.859663       1 shared_informer.go:318] Caches are synced for node
I0620 00:03:15.859688       1 range_allocator.go:174] "Sending events to api server"
I0620 00:03:15.859707       1 range_allocator.go:178] "Starting range CIDR allocator"
I0620 00:03:15.859710       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I0620 00:03:15.859713       1 shared_informer.go:318] Caches are synced for cidrallocator
I0620 00:03:15.863128       1 shared_informer.go:318] Caches are synced for TTL after finished
I0620 00:03:15.863208       1 range_allocator.go:380] "Set node PodCIDR" node="kubernetes-p2-control-plane" podCIDRs=[10.0.0.0/24]
I0620 00:03:15.867229       1 shared_informer.go:318] Caches are synced for crt configmap
I0620 00:03:15.885410       1 shared_informer.go:318] Caches are synced for service account
I0620 00:03:15.941445       1 shared_informer.go:318] Caches are synced for daemon sets
I0620 00:03:15.947650       1 shared_informer.go:318] Caches are synced for taint
I0620 00:03:15.947687       1 node_lifecycle_controller.go:1223] "Initializing eviction metric for zone" zone=""
I0620 00:03:15.947718       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I0620 00:03:15.947740       1 node_lifecycle_controller.go:875] "Missing timestamp for Node. Assuming now as a timestamp" node="kubernetes-p2-control-plane"
I0620 00:03:15.947766       1 node_lifecycle_controller.go:1027] "Controller detected that all Nodes are not-Ready. Entering master disruption mode"
I0620 00:03:15.947765       1 event.go:307] "Event occurred" object="kubernetes-p2-control-plane" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node kubernetes-p2-control-plane event: Registered Node kubernetes-p2-control-plane in Controller"
I0620 00:03:15.947780       1 taint_manager.go:211] "Sending events to api server"
I0620 00:03:15.954064       1 shared_informer.go:318] Caches are synced for HPA
I0620 00:03:15.954071       1 shared_informer.go:318] Caches are synced for disruption
I0620 00:03:15.954808       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-8kzfm"
I0620 00:03:15.956190       1 shared_informer.go:318] Caches are synced for deployment
I0620 00:03:15.956195       1 shared_informer.go:318] Caches are synced for ReplicationController
I0620 00:03:15.956230       1 shared_informer.go:318] Caches are synced for persistent volume
I0620 00:03:15.956233       1 shared_informer.go:318] Caches are synced for endpoint
I0620 00:03:15.956230       1 shared_informer.go:318] Caches are synced for PVC protection
I0620 00:03:15.959169       1 shared_informer.go:318] Caches are synced for resource quota
I0620 00:03:15.971638       1 shared_informer.go:318] Caches are synced for GC
I0620 00:03:15.976811       1 shared_informer.go:318] Caches are synced for stateful set
I0620 00:03:15.986865       1 shared_informer.go:318] Caches are synced for resource quota
I0620 00:03:16.005813       1 shared_informer.go:318] Caches are synced for ephemeral
I0620 00:03:16.005828       1 shared_informer.go:318] Caches are synced for attach detach
I0620 00:03:16.009090       1 shared_informer.go:318] Caches are synced for job
I0620 00:03:16.009095       1 shared_informer.go:318] Caches are synced for endpoint_slice
I0620 00:03:16.010260       1 shared_informer.go:318] Caches are synced for ReplicaSet
I0620 00:03:16.054811       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-client
I0620 00:03:16.054854       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-serving
I0620 00:03:16.055945       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0620 00:03:16.055954       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-legacy-unknown
I0620 00:03:16.077731       1 shared_informer.go:318] Caches are synced for certificate-csrapproving
I0620 00:03:16.126017       1 event.go:307] "Event occurred" object="local-path-storage/local-path-provisioner" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set local-path-provisioner-6bc4bddd6b to 1"
I0620 00:03:16.126054       1 event.go:307] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-5d78c9869d to 2"
I0620 00:03:16.311014       1 event.go:307] "Event occurred" object="kube-system/coredns-5d78c9869d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5d78c9869d-r2gvx"
I0620 00:03:16.312454       1 event.go:307] "Event occurred" object="local-path-storage/local-path-provisioner-6bc4bddd6b" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: local-path-provisioner-6bc4bddd6b-qw6dg"
I0620 00:03:16.314436       1 event.go:307] "Event occurred" object="kube-system/coredns-5d78c9869d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5d78c9869d-n2s9v"
I0620 00:03:16.391484       1 shared_informer.go:318] Caches are synced for garbage collector
I0620 00:03:16.425794       1 shared_informer.go:318] Caches are synced for garbage collector
I0620 00:03:16.425809       1 garbagecollector.go:166] "All resource monitors have synced. Proceeding to collect garbage"
I0620 00:03:21.981712       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"kubernetes-p2-worker3\" does not exist"
I0620 00:03:21.984802       1 range_allocator.go:380] "Set node PodCIDR" node="kubernetes-p2-worker3" podCIDRs=[10.0.1.0/24]
I0620 00:03:21.986468       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-vzfdl"
I0620 00:03:22.500023       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"kubernetes-p2-worker\" does not exist"
I0620 00:03:22.505049       1 range_allocator.go:380] "Set node PodCIDR" node="kubernetes-p2-worker" podCIDRs=[10.0.2.0/24]
I0620 00:03:22.505051       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-65td2"
I0620 00:03:23.274085       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"kubernetes-p2-worker2\" does not exist"
I0620 00:03:23.285171       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-cd4rl"
I0620 00:03:23.290794       1 range_allocator.go:380] "Set node PodCIDR" node="kubernetes-p2-worker2" podCIDRs=[10.0.3.0/24]
I0620 00:03:25.948500       1 node_lifecycle_controller.go:875] "Missing timestamp for Node. Assuming now as a timestamp" node="kubernetes-p2-worker2"
I0620 00:03:25.948527       1 event.go:307] "Event occurred" object="kubernetes-p2-worker2" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node kubernetes-p2-worker2 event: Registered Node kubernetes-p2-worker2 in Controller"
I0620 00:03:25.948540       1 event.go:307] "Event occurred" object="kubernetes-p2-worker3" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node kubernetes-p2-worker3 event: Registered Node kubernetes-p2-worker3 in Controller"
I0620 00:03:25.948549       1 event.go:307] "Event occurred" object="kubernetes-p2-worker" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node kubernetes-p2-worker event: Registered Node kubernetes-p2-worker in Controller"
I0620 00:03:25.948562       1 node_lifecycle_controller.go:875] "Missing timestamp for Node. Assuming now as a timestamp" node="kubernetes-p2-worker"
I0620 00:03:25.948569       1 node_lifecycle_controller.go:875] "Missing timestamp for Node. Assuming now as a timestamp" node="kubernetes-p2-worker3"
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-kubernetes-p2-control-plane ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-65td2 ====
I0620 00:03:24.249136       1 node.go:141] Successfully retrieved node IP: 172.19.0.3
I0620 00:03:24.249173       1 server_others.go:110] "Detected node IP" address="172.19.0.3"
I0620 00:03:24.257537       1 server_others.go:192] "Using iptables Proxier"
I0620 00:03:24.257546       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0620 00:03:24.257550       1 server_others.go:200] "Creating dualStackProxier for iptables"
I0620 00:03:24.257557       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I0620 00:03:24.257569       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0620 00:03:24.257785       1 server.go:658] "Version info" version="v1.27.3"
I0620 00:03:24.257793       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0620 00:03:24.258024       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I0620 00:03:24.258094       1 config.go:188] "Starting service config controller"
I0620 00:03:24.258103       1 shared_informer.go:311] Waiting for caches to sync for service config
I0620 00:03:24.258115       1 config.go:97] "Starting endpoint slice config controller"
I0620 00:03:24.258119       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0620 00:03:24.258121       1 config.go:315] "Starting node config controller"
I0620 00:03:24.258138       1 shared_informer.go:311] Waiting for caches to sync for node config
I0620 00:03:24.358177       1 shared_informer.go:318] Caches are synced for endpoint slice config
I0620 00:03:24.358179       1 shared_informer.go:318] Caches are synced for service config
I0620 00:03:24.358228       1 shared_informer.go:318] Caches are synced for node config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-65td2 ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-8kzfm ====
I0620 00:03:16.811047       1 node.go:141] Successfully retrieved node IP: 172.19.0.2
I0620 00:03:16.811085       1 server_others.go:110] "Detected node IP" address="172.19.0.2"
I0620 00:03:16.819802       1 server_others.go:192] "Using iptables Proxier"
I0620 00:03:16.819822       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0620 00:03:16.819828       1 server_others.go:200] "Creating dualStackProxier for iptables"
I0620 00:03:16.819836       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I0620 00:03:16.819850       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0620 00:03:16.820074       1 server.go:658] "Version info" version="v1.27.3"
I0620 00:03:16.820080       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0620 00:03:16.820322       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I0620 00:03:16.820411       1 config.go:188] "Starting service config controller"
I0620 00:03:16.820421       1 shared_informer.go:311] Waiting for caches to sync for service config
I0620 00:03:16.820455       1 config.go:315] "Starting node config controller"
I0620 00:03:16.820459       1 config.go:97] "Starting endpoint slice config controller"
I0620 00:03:16.820471       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0620 00:03:16.820478       1 shared_informer.go:311] Waiting for caches to sync for node config
I0620 00:03:16.920817       1 shared_informer.go:318] Caches are synced for node config
I0620 00:03:16.920817       1 shared_informer.go:318] Caches are synced for service config
I0620 00:03:16.920822       1 shared_informer.go:318] Caches are synced for endpoint slice config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-8kzfm ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-cd4rl ====
I0620 00:03:25.075880       1 node.go:141] Successfully retrieved node IP: 172.19.0.5
I0620 00:03:25.075912       1 server_others.go:110] "Detected node IP" address="172.19.0.5"
I0620 00:03:25.084546       1 server_others.go:192] "Using iptables Proxier"
I0620 00:03:25.084556       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0620 00:03:25.084560       1 server_others.go:200] "Creating dualStackProxier for iptables"
I0620 00:03:25.084567       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I0620 00:03:25.084582       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0620 00:03:25.084807       1 server.go:658] "Version info" version="v1.27.3"
I0620 00:03:25.084813       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0620 00:03:25.084998       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I0620 00:03:25.085067       1 config.go:188] "Starting service config controller"
I0620 00:03:25.085076       1 shared_informer.go:311] Waiting for caches to sync for service config
I0620 00:03:25.085087       1 config.go:97] "Starting endpoint slice config controller"
I0620 00:03:25.085089       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0620 00:03:25.085164       1 config.go:315] "Starting node config controller"
I0620 00:03:25.085183       1 shared_informer.go:311] Waiting for caches to sync for node config
I0620 00:03:25.185681       1 shared_informer.go:318] Caches are synced for endpoint slice config
I0620 00:03:25.185685       1 shared_informer.go:318] Caches are synced for node config
I0620 00:03:25.185687       1 shared_informer.go:318] Caches are synced for service config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-cd4rl ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-vzfdl ====
I0620 00:03:23.866077       1 node.go:141] Successfully retrieved node IP: 172.19.0.4
I0620 00:03:23.866113       1 server_others.go:110] "Detected node IP" address="172.19.0.4"
I0620 00:03:23.875091       1 server_others.go:192] "Using iptables Proxier"
I0620 00:03:23.875106       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0620 00:03:23.875110       1 server_others.go:200] "Creating dualStackProxier for iptables"
I0620 00:03:23.875117       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I0620 00:03:23.875132       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0620 00:03:23.875373       1 server.go:658] "Version info" version="v1.27.3"
I0620 00:03:23.875379       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0620 00:03:23.875813       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I0620 00:03:23.876059       1 config.go:188] "Starting service config controller"
I0620 00:03:23.876071       1 shared_informer.go:311] Waiting for caches to sync for service config
I0620 00:03:23.876084       1 config.go:97] "Starting endpoint slice config controller"
I0620 00:03:23.876086       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0620 00:03:23.876097       1 config.go:315] "Starting node config controller"
I0620 00:03:23.876106       1 shared_informer.go:311] Waiting for caches to sync for node config
I0620 00:03:23.976427       1 shared_informer.go:318] Caches are synced for service config
I0620 00:03:23.976431       1 shared_informer.go:318] Caches are synced for node config
I0620 00:03:23.976433       1 shared_informer.go:318] Caches are synced for endpoint slice config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-vzfdl ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-kubernetes-p2-control-plane ====
I0620 00:02:58.012654       1 serving.go:348] Generated self-signed cert in-memory
W0620 00:02:59.068022       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0620 00:02:59.068041       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0620 00:02:59.068050       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.
W0620 00:02:59.068057       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0620 00:02:59.114836       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.27.3"
I0620 00:02:59.114847       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0620 00:02:59.115399       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0620 00:02:59.115415       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0620 00:02:59.115715       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I0620 00:02:59.115992       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0620 00:02:59.116728       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0620 00:02:59.116751       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0620 00:02:59.116760       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0620 00:02:59.116775       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0620 00:02:59.116795       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0620 00:02:59.116808       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0620 00:02:59.116893       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0620 00:02:59.116933       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0620 00:02:59.116940       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0620 00:02:59.116952       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0620 00:02:59.116958       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0620 00:02:59.116969       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0620 00:02:59.117088       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0620 00:02:59.117096       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0620 00:02:59.117182       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0620 00:02:59.117190       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0620 00:02:59.117203       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0620 00:02:59.117211       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0620 00:02:59.117218       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0620 00:02:59.117222       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0620 00:02:59.117381       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0620 00:02:59.117381       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0620 00:02:59.117385       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0620 00:02:59.117391       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0620 00:02:59.117392       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0620 00:02:59.117396       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0620 00:02:59.117395       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0620 00:02:59.117415       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0620 00:02:59.117430       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0620 00:02:59.117445       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0620 00:02:59.963118       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0620 00:02:59.963141       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0620 00:03:00.124292       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0620 00:03:00.124339       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0620 00:03:00.201084       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0620 00:03:00.201100       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0620 00:03:00.213631       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0620 00:03:00.213643       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0620 00:03:00.225415       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0620 00:03:00.225424       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0620 00:03:00.407059       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0620 00:03:00.407072       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
I0620 00:03:02.115951       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0620 00:03:03.217751       1 leaderelection.go:245] attempting to acquire leader lease kube-system/kube-scheduler...
I0620 00:03:03.222014       1 leaderelection.go:255] successfully acquired lease kube-system/kube-scheduler
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-kubernetes-p2-control-plane ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes-p2-control-plane.176a3516aed9e010",
                "namespace": "default",
                "uid": "ecc2dd21-ba63-47f4-bf0b-ac552afdf17c",
                "resourceVersion": "223",
                "creationTimestamp": "2023-06-20T00:03:01Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-control-plane",
                "uid": "kubernetes-p2-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-control-plane"
            },
            "firstTimestamp": "2023-06-20T00:03:01Z",
            "lastTimestamp": "2023-06-20T00:03:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-control-plane.176a3516b076a213",
                "namespace": "default",
                "uid": "a58ae4ec-d265-49e6-b2d7-4ad8bd3e4e0e",
                "resourceVersion": "229",
                "creationTimestamp": "2023-06-20T00:03:01Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-control-plane",
                "uid": "kubernetes-p2-control-plane"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-control-plane"
            },
            "firstTimestamp": "2023-06-20T00:03:01Z",
            "lastTimestamp": "2023-06-20T00:03:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-control-plane.176a3516b4f852ab",
                "namespace": "default",
                "uid": "e071fd51-cad3-4677-a13f-138f629dd307",
                "resourceVersion": "230",
                "creationTimestamp": "2023-06-20T00:03:02Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-control-plane",
                "uid": "kubernetes-p2-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node kubernetes-p2-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-control-plane"
            },
            "firstTimestamp": "2023-06-20T00:03:02Z",
            "lastTimestamp": "2023-06-20T00:03:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-control-plane.176a3516b4f8674b",
                "namespace": "default",
                "uid": "b060652f-5499-4b89-92df-9182adce97cd",
                "resourceVersion": "231",
                "creationTimestamp": "2023-06-20T00:03:02Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-control-plane",
                "uid": "kubernetes-p2-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node kubernetes-p2-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-control-plane"
            },
            "firstTimestamp": "2023-06-20T00:03:02Z",
            "lastTimestamp": "2023-06-20T00:03:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-control-plane.176a3516b4f86d8b",
                "namespace": "default",
                "uid": "5c84419f-7744-4b88-b0af-26aa5b84a617",
                "resourceVersion": "232",
                "creationTimestamp": "2023-06-20T00:03:02Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-control-plane",
                "uid": "kubernetes-p2-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node kubernetes-p2-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-control-plane"
            },
            "firstTimestamp": "2023-06-20T00:03:02Z",
            "lastTimestamp": "2023-06-20T00:03:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-control-plane.176a3519f19c4176",
                "namespace": "default",
                "uid": "d38c7b97-b7ae-46fe-b7ce-7c2f2f73c0e8",
                "resourceVersion": "332",
                "creationTimestamp": "2023-06-20T00:03:15Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-control-plane",
                "uid": "098404d3-0792-47ef-9811-1fdaa9e44b18",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node kubernetes-p2-control-plane event: Registered Node kubernetes-p2-control-plane in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-06-20T00:03:15Z",
            "lastTimestamp": "2023-06-20T00:03:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-control-plane.176a351a25a0e4b2",
                "namespace": "default",
                "uid": "c9c18753-9fae-4f42-92ca-5bbe43b619d5",
                "resourceVersion": "371",
                "creationTimestamp": "2023-06-20T00:03:16Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-control-plane",
                "uid": "kubernetes-p2-control-plane"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-06-20T00:03:16.820394Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-kubernetes-p2-control-plane"
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker.176a351b71d3f513",
                "namespace": "default",
                "uid": "67cf348b-d83c-49eb-80bb-4c25f2acbfc0",
                "resourceVersion": "408",
                "creationTimestamp": "2023-06-20T00:03:22Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker",
                "uid": "kubernetes-p2-worker"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker"
            },
            "firstTimestamp": "2023-06-20T00:03:22Z",
            "lastTimestamp": "2023-06-20T00:03:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker.176a351b72686d79",
                "namespace": "default",
                "uid": "6549f63f-ffb0-44dc-be87-d48f3a2448b9",
                "resourceVersion": "415",
                "creationTimestamp": "2023-06-20T00:03:22Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker",
                "uid": "kubernetes-p2-worker"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node kubernetes-p2-worker status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker"
            },
            "firstTimestamp": "2023-06-20T00:03:22Z",
            "lastTimestamp": "2023-06-20T00:03:22Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker.176a351b72687fa3",
                "namespace": "default",
                "uid": "42d5fcd4-e64d-42b9-9074-cfaea84328fa",
                "resourceVersion": "416",
                "creationTimestamp": "2023-06-20T00:03:22Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker",
                "uid": "kubernetes-p2-worker"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node kubernetes-p2-worker status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker"
            },
            "firstTimestamp": "2023-06-20T00:03:22Z",
            "lastTimestamp": "2023-06-20T00:03:22Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker.176a351b726885d9",
                "namespace": "default",
                "uid": "93b5c798-e8bf-4a50-90e6-96ed56962cb9",
                "resourceVersion": "419",
                "creationTimestamp": "2023-06-20T00:03:22Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker",
                "uid": "kubernetes-p2-worker"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node kubernetes-p2-worker status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker"
            },
            "firstTimestamp": "2023-06-20T00:03:22Z",
            "lastTimestamp": "2023-06-20T00:03:22Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker.176a351b76c932d6",
                "namespace": "default",
                "uid": "d786c2aa-0748-4f1a-bef5-ce24da677f95",
                "resourceVersion": "412",
                "creationTimestamp": "2023-06-20T00:03:22Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker",
                "uid": "kubernetes-p2-worker"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker"
            },
            "firstTimestamp": "2023-06-20T00:03:22Z",
            "lastTimestamp": "2023-06-20T00:03:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker.176a351be0f2f7f7",
                "namespace": "default",
                "uid": "f90417a5-c079-4ea0-b55d-f150ac06bb05",
                "resourceVersion": "459",
                "creationTimestamp": "2023-06-20T00:03:24Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker",
                "uid": "kubernetes-p2-worker"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-06-20T00:03:24.258080Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-kubernetes-p2-worker"
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker.176a351c45b3cc96",
                "namespace": "default",
                "uid": "230886fc-7498-4eba-833a-5e707d7cff00",
                "resourceVersion": "472",
                "creationTimestamp": "2023-06-20T00:03:25Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker",
                "uid": "c73c9bc8-701a-4a44-bf74-20e13fd0a253",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node kubernetes-p2-worker event: Registered Node kubernetes-p2-worker in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-06-20T00:03:25Z",
            "lastTimestamp": "2023-06-20T00:03:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker2.176a351b9fe5f90b",
                "namespace": "default",
                "uid": "a33ec957-3e41-41ea-9e49-87c01771f78f",
                "resourceVersion": "429",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker2",
                "uid": "kubernetes-p2-worker2"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker2"
            },
            "firstTimestamp": "2023-06-20T00:03:23Z",
            "lastTimestamp": "2023-06-20T00:03:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker2.176a351ba07acd65",
                "namespace": "default",
                "uid": "d2128e2e-755e-466d-ac98-50a9725096b0",
                "resourceVersion": "435",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker2",
                "uid": "kubernetes-p2-worker2"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node kubernetes-p2-worker2 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker2"
            },
            "firstTimestamp": "2023-06-20T00:03:23Z",
            "lastTimestamp": "2023-06-20T00:03:23Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker2.176a351ba07ad8f5",
                "namespace": "default",
                "uid": "701da1de-4ac3-4e57-9294-34fa1a918a62",
                "resourceVersion": "438",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker2",
                "uid": "kubernetes-p2-worker2"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node kubernetes-p2-worker2 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker2"
            },
            "firstTimestamp": "2023-06-20T00:03:23Z",
            "lastTimestamp": "2023-06-20T00:03:23Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker2.176a351ba07ade9f",
                "namespace": "default",
                "uid": "7719dc3f-4900-48b2-b9dc-e1f89317262f",
                "resourceVersion": "443",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker2",
                "uid": "kubernetes-p2-worker2"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node kubernetes-p2-worker2 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker2"
            },
            "firstTimestamp": "2023-06-20T00:03:23Z",
            "lastTimestamp": "2023-06-20T00:03:23Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker2.176a351ba322ef7d",
                "namespace": "default",
                "uid": "f05c5dd6-cd00-41d6-8e87-bde351d26986",
                "resourceVersion": "433",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker2",
                "uid": "kubernetes-p2-worker2"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker2"
            },
            "firstTimestamp": "2023-06-20T00:03:23Z",
            "lastTimestamp": "2023-06-20T00:03:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker2.176a351c123d9a37",
                "namespace": "default",
                "uid": "be794355-af57-4e23-85f7-67cbb20da32c",
                "resourceVersion": "466",
                "creationTimestamp": "2023-06-20T00:03:25Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker2",
                "uid": "kubernetes-p2-worker2"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-06-20T00:03:25.085055Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-kubernetes-p2-worker2"
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker2.176a351c45b39118",
                "namespace": "default",
                "uid": "1c9ba2c5-2ee9-4402-b5c0-97f106c9b923",
                "resourceVersion": "470",
                "creationTimestamp": "2023-06-20T00:03:25Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker2",
                "uid": "4c4ee18b-64d7-4747-b32d-8fc602a2186b",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node kubernetes-p2-worker2 event: Registered Node kubernetes-p2-worker2 in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-06-20T00:03:25Z",
            "lastTimestamp": "2023-06-20T00:03:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker3.176a351b52f819e2",
                "namespace": "default",
                "uid": "23cad8d1-0821-4deb-84f7-c7e12fcec2fb",
                "resourceVersion": "390",
                "creationTimestamp": "2023-06-20T00:03:21Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker3",
                "uid": "kubernetes-p2-worker3"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker3"
            },
            "firstTimestamp": "2023-06-20T00:03:21Z",
            "lastTimestamp": "2023-06-20T00:03:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker3.176a351b53991296",
                "namespace": "default",
                "uid": "d6bc064c-d989-4944-b176-a95fcdd83fdf",
                "resourceVersion": "396",
                "creationTimestamp": "2023-06-20T00:03:21Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker3",
                "uid": "kubernetes-p2-worker3"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node kubernetes-p2-worker3 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker3"
            },
            "firstTimestamp": "2023-06-20T00:03:21Z",
            "lastTimestamp": "2023-06-20T00:03:21Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker3.176a351b53991e1c",
                "namespace": "default",
                "uid": "dab381a0-4fc9-47b5-8969-cb67d08e9abd",
                "resourceVersion": "399",
                "creationTimestamp": "2023-06-20T00:03:21Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker3",
                "uid": "kubernetes-p2-worker3"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node kubernetes-p2-worker3 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker3"
            },
            "firstTimestamp": "2023-06-20T00:03:21Z",
            "lastTimestamp": "2023-06-20T00:03:21Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker3.176a351b53992614",
                "namespace": "default",
                "uid": "096555f8-b5e9-4231-8cb5-7307dd1da323",
                "resourceVersion": "404",
                "creationTimestamp": "2023-06-20T00:03:21Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker3",
                "uid": "kubernetes-p2-worker3"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node kubernetes-p2-worker3 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker3"
            },
            "firstTimestamp": "2023-06-20T00:03:21Z",
            "lastTimestamp": "2023-06-20T00:03:21Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker3.176a351b5621a7f5",
                "namespace": "default",
                "uid": "05f5c707-9a2c-4007-8ab5-6415d4d21a5f",
                "resourceVersion": "394",
                "creationTimestamp": "2023-06-20T00:03:21Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker3",
                "uid": "kubernetes-p2-worker3"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "kubernetes-p2-worker3"
            },
            "firstTimestamp": "2023-06-20T00:03:21Z",
            "lastTimestamp": "2023-06-20T00:03:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker3.176a351bca2d9dd7",
                "namespace": "default",
                "uid": "12c5e3d5-f657-4a84-b17d-94ac0c92323f",
                "resourceVersion": "453",
                "creationTimestamp": "2023-06-20T00:03:23Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker3",
                "uid": "kubernetes-p2-worker3"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-06-20T00:03:23.876047Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-kubernetes-p2-worker3"
        },
        {
            "metadata": {
                "name": "kubernetes-p2-worker3.176a351c45b3c1e2",
                "namespace": "default",
                "uid": "26690953-d3cb-4398-922d-a6e2c7c1f19b",
                "resourceVersion": "471",
                "creationTimestamp": "2023-06-20T00:03:25Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "kubernetes-p2-worker3",
                "uid": "4fed1155-4113-45b2-9c2d-eecc121193db",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node kubernetes-p2-worker3 event: Registered Node kubernetes-p2-worker3 in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-06-20T00:03:25Z",
            "lastTimestamp": "2023-06-20T00:03:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "b41afe83-e8f1-48c2-a61b-7ba9a40d6760",
                "resourceVersion": "194",
                "creationTimestamp": "2023-06-20T00:03:00Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "651"
    },
    "items": []
}
